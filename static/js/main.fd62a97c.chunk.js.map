{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/Notification/Notification.module.css","App.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/Notification/Notification.jsx","redux/actions.js","redux/operations.js","redux/selectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Loader/Loader.jsx","components/Container/Container.jsx","App.js","redux/reducers.js","redux/store.js","index.js"],"names":["module","exports","Notification","className","s","alert","text","fetchContactsRequest","createAction","fetcContactsSuccess","fetcContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","name","number","dispatch","contact","actions","post","then","data","catch","error","contactId","delete","get","getContacts","state","contacts","items","getFilter","filter","getLoading","loading","findContact","createSelector","normalized","toLowerCase","includes","ContactForm","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","some","item","toggleError","onSubmit","resetForm","setTimeout","this","CSSTransition","in","classNames","errorStyles","timeout","unmountOnExit","form","autoComplete","label","input","type","onChange","btn","disabled","Component","connect","selectors","operations","ContactListItem","id","deleteContact","onClick","icon","TransitionGroup","component","list","map","target","Loader","color","Container","children","container","App","fetchContacts","isLoading","appear","styles","title","length","createReducer","_","payload","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd62a97c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"item\":\"ContactList_item__3YsZK\",\"delete\":\"ContactList_delete__3bnVP\",\"icon\":\"ContactList_icon__33G6D\",\"enter\":\"ContactList_enter__1Tfxs\",\"enterActive\":\"ContactList_enterActive__BPn6N\",\"exit\":\"ContactList_exit__3MW4R\",\"exitActive\":\"ContactList_exitActive__ZA3FS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"btn\":\"ContactForm_btn__2Bpnz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"Notification_alert__294Wr\",\"text\":\"Notification_text__3WvWm\",\"enter\":\"Notification_enter__1Q63C\",\"enterActive\":\"Notification_enterActive__y-ZzH\",\"exit\":\"Notification_exit__1TA8V\",\"exitActive\":\"Notification_exitActive__3mZBI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"App_enter__2d_oE\",\"enterActive\":\"App_enterActive__3Z_zS\",\"exit\":\"App_exit__qu2sb\",\"exitActive\":\"App_exitActive__3R2-x\",\"appear\":\"App_appear__3r9lb\",\"appearActive\":\"App_appearActive__1uccQ\",\"title\":\"App_title__-GfWs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1E5tH\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};","import React from 'react';\nimport s from './Notification.module.css';\n\nconst Notification = () => (\n        <div className={s.alert}>\n            <p className={s.text}>Contact already exist!</p>\n        </div>\n    );\n\nexport default Notification;","/* eslint-disable import/no-anonymous-default-export */\nimport { createAction } from '@reduxjs/toolkit';\n\nconst fetchContactsRequest = createAction('fetchContactsRequest');\nconst fetcContactsSuccess = createAction('fetcContactsSuccess');\nconst fetcContactsError = createAction('fetcContactsError');\n\nconst addContactRequest = createAction('addContactRequest');\nconst addContactSuccess = createAction('addContactSuccess');\nconst addContactError = createAction('addContactError');\n\nconst deleteContactRequest = createAction('deleteContactRequest');\nconst deleteContactSuccess = createAction('deleteContactSuccess');\nconst deleteContactError = createAction('deleteContactError');\n\nconst changeFilter = createAction('changeFilter');\nexport default {\n    fetchContactsRequest,\n    fetcContactsSuccess,\n    fetcContactsError,\n    addContactRequest,\n    addContactSuccess,\n    addContactError,\n    deleteContactRequest,\n    deleteContactSuccess,\n    deleteContactError,\n    changeFilter\n};","/* eslint-disable import/no-anonymous-default-export */\nimport axios from 'axios';\nimport actions from './actions';\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nconst fetchContacts = () => dispatch => {\n    dispatch(actions.fetchContactsRequest());\n    axios\n        .get('/contacts')\n        .then(({ data }) => dispatch(actions.fetcContactsSuccess(data)))\n        .catch(error => dispatch(actions.fetcContactsError(error)));\n};\nconst addContact = ({ name, number }) => dispatch => {\n    const contact = {\n        name,\n        number\n    };\n        dispatch(actions.addContactRequest());\n    axios\n        .post('/contacts', contact)\n        .then(({ data }) => dispatch(actions.addContactSuccess(data)))\n        .catch(error => dispatch(actions.addContactError(error)));\n};\nconst deleteContact = contactId => dispatch => {\n    dispatch(actions.deleteContactRequest());\n    axios\n        .delete(`/contacts/${contactId}`)\n        .then(() => dispatch(actions.deleteContactSuccess(contactId)))\n        .catch(error => dispatch(actions.deleteContactError(error)));\n};\nexport default {\n    addContact,\n    deleteContact,\n    fetchContacts\n};","import { createSelector } from \"@reduxjs/toolkit\";\n\n/* eslint-disable import/no-anonymous-default-export */\nconst getLoading = state => state.contacts.loading;\nconst getContacts = state => state.contacts.items;\nconst getFilter = state => state.contacts.filter;\nconst findContact = createSelector(\n    [getContacts, getFilter],\n    (contacts, filter) => {\n        const normalized = filter.toLowerCase();\n        return contacts.filter(contact =>\n            contact.name.toLowerCase().includes(normalized),\n        );\n    }\n);\nexport default { getLoading, getContacts, getFilter, findContact};","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { CSSTransition } from 'react-transition-group';\nimport s from './ContactForm.module.css';\nimport Notification from '../Notification/Notification';\nimport errorStyles from '../Notification/Notification.module.css';\nimport operations from '../../redux/operations';\nimport selectors  from '../../redux/selectors';\n\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n    error: false,\n  };\n  handleChange = e => {\n    this.setState({ [e.currentTarget.name]: e.currentTarget.value });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    const duplicate = this.props.contacts.some(\n      item => item.name === this.state.name,\n    );\n    if (duplicate) return this.toggleError();\n    this.props.onSubmit(this.state);\n    this.resetForm();\n  };\n  toggleError = () => {\n    this.setState({ error: true });\n    setTimeout(() => { this.setState({ error:false }) }, 2000);\n  };\n  resetForm = () => {\n    this.setState({ name: '', number: '' });\n  };\n  render() {\n    const { name, number, error } = this.state;\n    return (\n      <>\n        <CSSTransition\n          in={error}\n          classNames={errorStyles}\n          timeout={250}\n          unmountOnExit\n        >\n          <Notification/>\n        </CSSTransition>\n        <form\n          className={s.form}\n          autoComplete=\"off\"\n          onSubmit={this.handleSubmit}\n        >\n          <label className={s.label}>\n            {' '}\n            Name\n            <input\n              className={s.input}\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={this.handleChange}\n            />\n          </label>\n          <label className={s.label}>\n            {' '}\n            Phone\n            <input\n              className={s.input}\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              onChange={this.handleChange}\n            />\n          </label>\n          <button className={s.btn} type=\"submit\" disabled={!name}>\n            {' '}\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n};\nconst mapStateToProps = state => ({\n  contacts: selectors.getContacts(state),\n})\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (contact) => dispatch(operations.addContact(contact)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps )(ContactForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\nimport { BsFillXSquareFill } from \"react-icons/bs\";\n\nconst ContactListItem = ({ id, name, number, deleteContact }) => {\n  return (\n    <li className={s.item}>\n      {' '}\n      <span>{name}</span> <span>{number}</span>\n        <button\n          className={s.delete}\n          type=\"button\"\n          onClick={() => {\n            deleteContact(id);\n          }}\n        >\n          <BsFillXSquareFill className={s.icon} />\n        </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n\nexport default ContactListItem;\n","import React from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport ContactListItem from './ContactListItem';\nimport s from './ContactList.module.css';\nimport operations from '../../redux/operations';\nimport selectors from '../../redux/selectors';\n\nconst ContactList = ({ contacts, deleteContact }) => {\n  return (\n    <TransitionGroup component=\"ul\" className={s.list}>\n      {contacts.map(({ id, name, number }) => (\n        <CSSTransition key={id} timeout={250} classNames={s}>\n          <ContactListItem\n          key={id}\n          name={name}\n          number={number}\n          id={id}\n          deleteContact={deleteContact}\n        />\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  );\n};\n\nconst mapStateToProps = state => ({\n  contacts: selectors.findContact(state),\n});\nconst mapDispatchToProps = dispatch => ({\n  deleteContact: (id) => dispatch(operations.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport actions from '../../redux/actions';\nimport s from './Filter.module.css';\nimport selectors from '../../redux/selectors';\n\n\n\nconst Filter = ({ value, onChange }) => (\n  <label className={s.filter}>\n    Find contacts by name\n    <input className={s.input} type=\"text\" value={value} onChange={onChange} />\n  </label>\n);\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\nconst mapStateToProps = state => ({\n  value: selectors.getFilter(state),\n});\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(actions.changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import { RotaingPlane } from 'styled-spinkit';\n\nexport default function Loader() {\n  return <RotaingPlane color=\"#3e58e9\" />;\n}\n","import React from 'react';\nimport s from './Container.module.css';\n\nconst Container = ({ children }) => <div className={s.container}>{children}</div>;\n\nexport default Container;","import React, {Component} from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\nimport Loader from './components/Loader/Loader.jsx';\nimport Container from './components/Container/Container';\nimport styles from './App.module.css';\nimport operations from './redux/operations';\nimport selectors from './redux/selectors';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  };\n  render() {\n    const { contacts, isLoading } = this.props;\n    return (\n      <Container>\n        <CSSTransition\n          in={true}\n          appear={true}\n          classNames={styles}\n          timeout={1000}\n          unmountOnExit\n        >\n          <h1 className={styles.title}>Phonebook</h1>\n        </CSSTransition>\n        \n        <ContactForm />\n    \n        <CSSTransition\n          in={contacts.length > 1}\n          classNames={styles}\n          timeout={250}\n          unmountOnExit\n        >\n          <Filter />\n        </CSSTransition>\n\n        {isLoading && <Loader />}\n        \n        <CSSTransition\n          in={contacts.length > 0}\n          classNames={styles}\n          timeout={250}\n          unmountOnExit\n        >\n          <ContactList />\n        </CSSTransition>\n      </Container>\n    );\n  }\n};\nconst mapDispatchProps = dispatch => ({\n  fetchContacts: () => dispatch(operations.fetchContacts())\n});\nconst mapStateToProps = state => ({\n  contacts: selectors.getContacts(state),\n  isLoading: selectors.getLoading(state),\n});\nexport default connect(mapStateToProps,mapDispatchProps)(App);\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport actions from './actions';\n\nconst items = createReducer([], {\n    [actions.fetcContactsSuccess]: (_,{payload}) => payload,\n    [actions.addContactSuccess]: (state, { payload }) => [...state, payload],\n    [actions.deleteContactSuccess]: (state, { payload }) => state.filter(({ id }) => id !== payload),\n});\nconst filter = createReducer('', {\n    [actions.changeFilter]: (_, { payload }) => payload,\n});\nconst loading = createReducer(false, {\n    [actions.addContactRequest]: () => true,\n    [actions.addContactSuccess]: () => false,\n    [actions.addContactError]: () => false,\n    [actions.deleteContactRequest]: () => true,\n    [actions.deleteContactSuccess]: () => false,\n    [actions.deleteContactError]: () => false,\n});\nexport default combineReducers({\n    items,\n    filter,\n    loading\n});","/* eslint-disable import/no-anonymous-default-export */\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n\nimport {\n    persistStore,\n    // persistReducer,\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER,\n} from 'redux-persist';\n// import storage from 'redux-persist/lib/storage';\nimport reducer from './reducers';\n\nconst middleware = [...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })];\n// const persistConfig = {\n//     key: 'phoneBook',\n//     storage,\n//     blacklist: ['filter'],\n// };\nconst store = configureStore({\n    reducer: {\n        contacts: reducer,\n    },\n    middleware,\n    // devTools: process.env.NODE_ENV === 'development',\n});\nconst persistor = persistStore(store);\nexport default { store, persistor };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n        <App />\n      {/* </PersistGate> */}\n    </Provider>\n    \n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}